{"ast":null,"code":"var _jsxFileName = \"/Users/vaibhavrohaan/Desktop/bridge/frontend/src/pages/Quote.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Quote = () => {\n  _s();\n  const [quote, setQuote] = useState(null);\n  const history = useNavigate();\n  const location = useLocation();\n  const {\n    selectedToken,\n    selectedChain\n  } = location.state;\n  useEffect(() => {\n    const fetchQuote = async () => {\n      try {\n        const response = await axios.post('http://localhost:8080/quotes', {\n          token,\n          chain\n        });\n        setQuote(response.data);\n      } catch (error) {\n        console.error('Error fetching quote:', error);\n      }\n    };\n    fetchQuote();\n  }, [token, chain]);\n  const handleBridge = () => {\n    history.push('/params', {\n      token,\n      chain,\n      quote\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Quote\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), quote && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Quote: \", quote.amount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleBridge,\n        children: \"Bridge\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n_s(Quote, \"JDyJlgR3nCsn5dZFhiwap+2JZDE=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = Quote;\nexport default Quote;\nvar _c;\n$RefreshReg$(_c, \"Quote\");","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","useLocation","jsxDEV","_jsxDEV","Quote","_s","quote","setQuote","history","location","selectedToken","selectedChain","state","fetchQuote","response","post","token","chain","data","error","console","handleBridge","push","children","fileName","_jsxFileName","lineNumber","columnNumber","amount","onClick","_c","$RefreshReg$"],"sources":["/Users/vaibhavrohaan/Desktop/bridge/frontend/src/pages/Quote.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate, useLocation } from 'react-router-dom';\n\nconst Quote = () => {\n    const [quote, setQuote] = useState(null);\n    const history = useNavigate();\n    const location = useLocation();\n   const {selectedToken, selectedChain} = location.state;\n\n    useEffect(() => {\n        const fetchQuote = async () => {\n            try {\n                const response = await axios.post('http://localhost:8080/quotes', { token, chain });\n                setQuote(response.data);\n            } catch (error) {\n                console.error('Error fetching quote:', error);\n            }\n        };\n\n        fetchQuote();\n    }, [token, chain]);\n\n    const handleBridge = () => {\n        history.push('/params', { token, chain, quote });\n    };\n\n    return (\n        <div>\n            <h1>Quote</h1>\n            {quote && (\n                <div>\n                    <p>Quote: {quote.amount}</p>\n                    <button onClick={handleBridge}>Bridge</button>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default Quote;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5D,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAMW,OAAO,GAAGR,WAAW,CAAC,CAAC;EAC7B,MAAMS,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAC/B,MAAM;IAACS,aAAa;IAAEC;EAAa,CAAC,GAAGF,QAAQ,CAACG,KAAK;EAEpDd,SAAS,CAAC,MAAM;IACZ,MAAMe,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC3B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMf,KAAK,CAACgB,IAAI,CAAC,8BAA8B,EAAE;UAAEC,KAAK;UAAEC;QAAM,CAAC,CAAC;QACnFV,QAAQ,CAACO,QAAQ,CAACI,IAAI,CAAC;MAC3B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MACjD;IACJ,CAAC;IAEDN,UAAU,CAAC,CAAC;EAChB,CAAC,EAAE,CAACG,KAAK,EAAEC,KAAK,CAAC,CAAC;EAElB,MAAMI,YAAY,GAAGA,CAAA,KAAM;IACvBb,OAAO,CAACc,IAAI,CAAC,SAAS,EAAE;MAAEN,KAAK;MAAEC,KAAK;MAAEX;IAAM,CAAC,CAAC;EACpD,CAAC;EAED,oBACIH,OAAA;IAAAoB,QAAA,gBACIpB,OAAA;MAAAoB,QAAA,EAAI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACbrB,KAAK,iBACFH,OAAA;MAAAoB,QAAA,gBACIpB,OAAA;QAAAoB,QAAA,GAAG,SAAO,EAACjB,KAAK,CAACsB,MAAM;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC5BxB,OAAA;QAAQ0B,OAAO,EAAER,YAAa;QAAAE,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7C,CACR;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAACtB,EAAA,CAlCID,KAAK;EAAA,QAESJ,WAAW,EACVC,WAAW;AAAA;AAAA6B,EAAA,GAH1B1B,KAAK;AAoCX,eAAeA,KAAK;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}